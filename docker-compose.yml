services:
  # Databases
  postgres:
    image: postgres:15
    container_name: zimnews-postgres
    environment:
      POSTGRES_DB: zimnews
      POSTGRES_USER: zimnews
      POSTGRES_PASSWORD: development
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U zimnews"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: zimnews-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.0
    container_name: zimnews-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  rabbitmq:
    image: rabbitmq:3-management
    container_name: zimnews-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: zimnews
      RABBITMQ_DEFAULT_PASS: development
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  # API Gateway
  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    container_name: zimnews-api-gateway
    user: "1000:1000" # run as host dev user to avoid root-owned files
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=development
      - PORT=8000
      - USER_SERVICE_URL=http://user-service:8001
      - ARTICLE_SERVICE_URL=http://article-service:8002
    depends_on:
      - user-service
      - article-service
    volumes:
      - ./services/api-gateway:/app
      - api_gateway_node_modules:/app/node_modules
    command: npm run dev

  # Microservices
  user-service:
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    container_name: zimnews-user-service
    user: "1000:1000"
    ports:
      - "8001:8001"
    environment:
      - NODE_ENV=development
      - PORT=8001
      - DATABASE_URL=postgresql://zimnews:development@postgres:5432/zimnews
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-here
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./services/user-service:/app
      - user_service_node_modules:/app/node_modules
    command: npm run dev

  article-service:
    build:
      context: ./services/article-service
      dockerfile: Dockerfile
    container_name: zimnews-article-service
    user: "1000:1000"
    ports:
      - "8002:8002"
    environment:
      - NODE_ENV=development
      - PORT=8002
      - DATABASE_URL=postgresql://zimnews:development@postgres:5432/zimnews
      - REDIS_URL=redis://redis:6379
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - RABBITMQ_URL=amqp://zimnews:development@rabbitmq:5672
      - INGESTION_KEY=dev-shared-key
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      elasticsearch:
        condition: service_started
      rabbitmq:
        condition: service_started
    volumes:
      - ./services/article-service:/app
      - article_service_node_modules:/app/node_modules
    command: npm run dev

  ingestion-service:
    build:
      context: .
      dockerfile: services/ingestion-service/Dockerfile
    container_name: zimnews-ingestion-service
    environment:
      - NODE_ENV=development
      - PORT=8004
      - ARTICLE_SERVICE_URL=http://article-service:8002
      - INGEST_INTERVAL_MS=120000
      - INGESTION_KEY=dev-shared-key
    depends_on:
      - article-service
    volumes:
      - ./services/ingestion-service:/app
      - ingestion_service_node_modules:/app/node_modules
    command: npm run dev

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: zimnews-frontend
    user: "1000:1000"
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://api-gateway:8000
    depends_on:
      - api-gateway
    volumes:
      - ./frontend:/app
    command: npm run dev

volumes:
  postgres_data:
  redis_data:
  elasticsearch_data:
  rabbitmq_data:
  api_gateway_node_modules:
  user_service_node_modules:
  article_service_node_modules:
  ingestion_service_node_modules:

networks:
  default:
    name: zimnews-network